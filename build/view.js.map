{"version":3,"file":"view.js","mappings":"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","sources":["webpack://spacial-button/./src/view.js"],"sourcesContent":["const spacialContainers = document.querySelectorAll('.wp-block-spc-btn-spacial-button')\r\n\r\nfunction calculateContainerBox(container){\r\n    const containerBox = container.getBoundingClientRect()\r\n    const innerContainerBox = container.childNodes[1].getBoundingClientRect()\r\n\r\n    let values = {\r\n        outer:{\r\n            x:containerBox.x,\r\n            y:containerBox.y,\r\n            w:containerBox.width,\r\n            h:containerBox.height\r\n        },\r\n        inner:{\r\n            x:innerContainerBox.x,\r\n            y:innerContainerBox.y,\r\n            w:innerContainerBox.width,\r\n            h:innerContainerBox.height\r\n        }\r\n    }\r\n\r\n    return values\r\n}\r\n\r\nfunction calculateInnerBoxSize(container){\r\n    const containerBox = calculateContainerBox(container)\r\n    container.style.setProperty('--innerW', `${containerBox.inner.w}px`)\r\n    container.style.setProperty('--innerH', `${containerBox.inner.h}px`)\r\n}\r\n\r\nfunction calculateSpacialRel(container, event){\r\n    \r\n    const containerBox = calculateContainerBox(container)\r\n    const mX = event.x\r\n    const mY = event.y\r\n\r\n    const mRelX = mX - containerBox.outer.x\r\n    const mRelY = mY - containerBox.outer.y\r\n\r\n    // console.log(mRelX, mRelY)\r\n\r\n    let precision = 1000\r\n\r\n    let percentW = Math.floor((mRelX / containerBox.outer.w)*precision)/precision\r\n    let percentH = Math.floor((mRelY / containerBox.outer.h)*precision)/precision\r\n\r\n    // console.log(percentW, percentH)\r\n\r\n    let posX = percentW * containerBox.outer.w\r\n    let posY = percentH * containerBox.outer.h\r\n\r\n    // console.log(`x:${posX}/${containerBox.outer.w}`, `y: ${posY}/${containerBox.outer.h} - ${percentH}`)\r\n\r\n    container.style.setProperty('--posX', `${posX}px`)\r\n    container.style.setProperty('--posY', `${posY}px`)\r\n\r\n}\r\n\r\n\r\nfunction updatePosOnScroll(container, scrollAmount){\r\n    let containerStyles = window.getComputedStyle(container)\r\n    let containerPosYStyle = containerStyles.getPropertyValue('--posY')\r\n    let oldContainerY = parseInt(containerPosYStyle)\r\n\r\n    let newContainerY = oldContainerY - scrollAmount\r\n\r\n    container.style.setProperty('--posY', `${newContainerY}px`)\r\n    \r\n}\r\n\r\n\r\nwindow.onload = () =>{\r\n        spacialContainers.forEach((container)=>{\r\n\r\n            calculateInnerBoxSize(container)\r\n\r\n            if(container.classList.contains('is-local')){\r\n                container.addEventListener(\"mousemove\", (e)=>{\r\n                    calculateSpacialRel(container, e)\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\nlet windowScrollTopBase = window.scrollY\r\nconst updateGlobalContainers = (e) =>{\r\n\r\n    \r\n    spacialContainers.forEach((container)=>{\r\n        if(container.classList.contains('is-global')){\r\n            calculateSpacialRel(container, e)\r\n        }\r\n    })\r\n}\r\nfunction updateGlobalContainersOnScroll(e){\r\n    let newScrollTop = window.scrollY\r\n    let scrollAmount = windowScrollTopBase - newScrollTop\r\n    spacialContainers.forEach((container=>{\r\n        if(container.classList.contains('is-global')){\r\n            updatePosOnScroll(container, scrollAmount)\r\n        }\r\n    }))\r\n    windowScrollTopBase = newScrollTop\r\n}\r\n\r\n\r\nlet visibleSpacial = []\r\nconst spacialObserver = new IntersectionObserver((entries)=>{\r\n    entries.forEach(entry=>{\r\n        if(entry.isIntersecting){\r\n            visibleSpacial.push(entry.target)\r\n        }else{\r\n            const index = visibleSpacial.indexOf(entry.target);\r\n            if (index !== -1) {\r\n                visibleSpacial.splice(index, 1);\r\n            }\r\n        }\r\n    })\r\n\r\n    if(visibleSpacial.length > 0){\r\n        window.addEventListener('mousemove', updateGlobalContainers)\r\n        window.addEventListener('scroll', updateGlobalContainersOnScroll)\r\n    }else if(visibleSpacial.length <= 0){\r\n        window.removeEventListener('mousemove', updateGlobalContainers)\r\n        window.removeEventListener('scroll', updateGlobalContainersOnScroll)\r\n    }\r\n}, {\r\n    threshold:0\r\n})\r\n\r\nspacialContainers.forEach((container)=>{\r\n    if(container.classList.contains('is-global')){\r\n        spacialObserver.observe(container)\r\n    }\r\n})\r\n"],"names":["spacialContainers","document","querySelectorAll","calculateContainerBox","container","containerBox","getBoundingClientRect","innerContainerBox","childNodes","values","outer","x","y","w","width","h","height","inner","calculateInnerBoxSize","style","setProperty","calculateSpacialRel","event","mX","mY","mRelX","mRelY","precision","percentW","Math","floor","percentH","posX","posY","updatePosOnScroll","scrollAmount","containerStyles","window","getComputedStyle","containerPosYStyle","getPropertyValue","oldContainerY","parseInt","newContainerY","onload","forEach","classList","contains","addEventListener","e","windowScrollTopBase","scrollY","updateGlobalContainers","updateGlobalContainersOnScroll","newScrollTop","visibleSpacial","spacialObserver","IntersectionObserver","entries","entry","isIntersecting","push","target","index","indexOf","splice","length","removeEventListener","threshold","observe"],"sourceRoot":""}